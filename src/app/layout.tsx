"use client";

import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
// import Link from "next/link";
import {
  DeploymentUnitOutlined,
  MonitorOutlined,
  UserOutlined,
  UsergroupAddOutlined,
} from "@ant-design/icons";
import type { MenuProps, ThemeConfig } from "antd";
import { App, Menu, Breadcrumb, Layout, theme, ConfigProvider, Typography } from "antd";
const { Link } = Typography;
import { CSSProperties, useState } from "react";
import { usePathname } from "next/navigation";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const logoStyle: CSSProperties = {
  fontFamily: "'Titillium Web', sans-serif !important",
  fontSize: "2.2rem !important",
  padding: "1rem",
  display: "block",
  position: "relative",
  fontWeight: 700,
  background: "-webkit-linear-gradient(135deg, #1cffff, #ff13e0)",
  WebkitBackgroundClip: "text",
  WebkitTextFillColor: "transparent",
  textAlign: "center",
};

const { Header, Content, Footer, Sider } = Layout;

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const onClick: MenuProps["onClick"] = (e) => {
    console.log("click ", e);
  };

  const [collapsed, setCollapsed] = useState(false);

  const config: ThemeConfig = {
    // algorithm: theme.darkAlgorithm,
    token: {
      fontFamily: "'Titillium Web', sans-serif",
      fontSize: 16,
      // colorText: "rgb(200, 200, 200)",
      colorPrimary: "#722ed1",
      colorInfo: "#722ed1",
      colorBgBase: "rgb(180, 180, 180)",
    },
    components: {
      Typography: {
        colorLink: "rgb(22, 119, 255)",
        colorLinkHover: "rgb(255, 255, 255)"
      },
      Menu: {
        iconSize: 30,
        collapsedIconSize: 30,
        itemHeight: 60,
      },
    },
  };

  const { getDesignToken } = theme;
  const globalToken = getDesignToken(config);
  const { colorBgContainer, borderRadiusLG } = globalToken;
  
  const pathname = usePathname();

  return (
    <html lang="en">
      <body className={inter.className}>
        <ConfigProvider
          theme={config}
        >
          <App>
            <Layout style={{ minHeight: "100vh" }}>
              <Sider
                collapsible
                collapsed={collapsed}
                onCollapse={(value) => setCollapsed(value)}
              >
                <figure style={logoStyle}>
                  {collapsed ? "Mu" : "Mukh.tar"}
                </figure>
                <Menu theme="dark" defaultSelectedKeys={[pathname]} mode="inline">
                  <Menu.Item key="/about" icon={<UserOutlined />}>
                    <Link href="/about">About</Link>
                  </Menu.Item>
                  <Menu.Item key="/" icon={<DeploymentUnitOutlined />}>
                    <Link href="/">Solana Validator</Link>
                  </Menu.Item>
                  <Menu.Item key="/community" icon={<UsergroupAddOutlined />}>
                    <Link href="/community">Community</Link>
                  </Menu.Item>
                  <Menu.Item key="/analytics" icon={<MonitorOutlined />}>
                    <Link href="/analytics">Analytics *soon*</Link>
                  </Menu.Item>
                </Menu>
              </Sider>
              <Layout>
                {/* <Header style={{ padding: '0', background: colorBgContainer }} /> */}
                <Content style={{ margin: "0 16px" }}>
                  <div
                    style={{
                      padding: 24,
                      margin: "16px 0 0 0",
                      minHeight: 260,
                      background: colorBgContainer,
                      borderRadius: borderRadiusLG,
                    }}
                  >
                    {children}
                  </div>
                </Content>
                <Footer style={{ textAlign: "center" }}>Â© 2024</Footer>
              </Layout>
            </Layout>
          </App>
        </ConfigProvider>
      </body>
    </html>
  );
}
